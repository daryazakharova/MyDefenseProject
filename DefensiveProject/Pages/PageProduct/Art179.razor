@page "/179"

<div class="row">
    <p><a href="">Главная страница</a>> <a href="catalogBoy">Каталог мальчики</a>> @product.Name</p>
</div>

<div class="row">
    <div class="col">
    </div>
    <div class="col-9 pt-4 text-center">
        <div class="floating-box">
            <div class="row">
                <div class="col text-center">
                    <img class="icon" src="@String.Format("data:image/jpg;base64,{0}", Convert.ToBase64String(product.Photo))">
                </div>
                <div class="col-7 pt-3">
                    <h5><i>@product.Name</i></h5>
                    <h6><i>@product.Price р.</i></h6>
                    <hr />
                    <button class="basket2">104</button>
                    <button class="basket2">110</button>
                    <button class="basket2">116</button>
                    <button class="basket2">128</button>
                    <h6><i>Артикул: @product.ArticleProduct</i></h6>
                    <h6><i>Описание: @product.Description</i></h6>
                    <br />
                    <AuthorizeView>
                        <Authorized>
                            <button class="basket"><i class="fa-solid fa-bucket"></i> В корзину</button>
                        </Authorized>
                        <NotAuthorized>
                            <button class="basket" @onclick="OnClick"><i class="fa-solid fa-bucket"></i> В корзину</button>
                            <label class="text-danger"><i>@Message</i></label>
                        </NotAuthorized>
                    </AuthorizeView>
                </div>
            </div>
        </div>
    </div>
</div>
@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; }

    private int ArticlePr = 179;
    private string Gender = "Мальчик";
    private string Category = "Футболки и лонгсливы";
    private string Name = string.Empty;
    private int Price;
    private string Description = string.Empty;
    private int Size104 = 104;
    private int Size110 = 110;
    private int Size116 = 116;
    private int Size128 = 128;
    private string Message = string.Empty;

    UnitOfGoods product = new UnitOfGoods();
    BasketUser basket = new BasketUser();

    protected override void OnInitialized()
    {
        product = UnitOfGoods.GetArticleClothes(ArticlePr);
    }
    private async Task<UserAccount> GetAuthorizedUser()
    {
        var authState = await authenticationState;
        string userName = authState.User.Identity.Name;
        UserAccount authorizedUser = UserAccount.GetUserLogin(userName);
        return authorizedUser;
    }
    private void OnClick()
    {
        Message = "Чтобы добавить в корзину необходимо авторизоваться!";
    }
    private void OnClick104()
    {
        product.size = Size104;
    }
    private void OnClick110()
    {
        product.size = Size110;
    }
    private void OnClick116()
    {
        product.size = Size116;
    }
    private void OnClick128()
    {
        product.size = Size128;
    }
    private void AddToBasket()
    {
        //добавить в список корзины и записать в базу данных
       
    }


}
